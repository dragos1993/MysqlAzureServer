name: 1-actions-ci-cd-aks

on:
  push:
    branches: [ main ]
    paths: .github/workflows/1-actions-ci-cd-aks.yml
  pull_request:
    branches: none
  workflow_dispatch:

jobs:

  build-deploy-aks:
    runs-on: ubuntu-latest
    env:
      ACR_NAME: aksdevopsacr1.azurecr.io
      IMAGE_NAME: argocd-web-app
      IMAGE_TAG: ${{ github.run_number }}

    steps:

    - name: Git Checkout
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure Container Registry Login
      run: |
        az acr login --name aksdevopsacr1

    - name: Build Docker Image
      run: |
        docker build ./App/ \
          --file ./App/Dockerfile \
          --tag $ACR_NAME/$IMAGE_NAME:$IMAGE_TAG \
          --no-cache

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:image-ref: '${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'MEDIUM,HIGH,CRITICAL'
        

    - name: Push Image to ACR
      run: |
        docker push $ACR_NAME/$IMAGE_NAME:$IMAGE_TAG

    - uses: cschleiden/replace-tokens@v1
      with:
        files: '["kubernetes/*.yaml"]'
        tokenPrefix: __
        tokenSuffix: __
      env:
        DOCKER_REPOSITORY: ${{ env.ACR_NAME }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}

    - name: Apply Kubernetes Deployment
      run: |
        kubectl apply --validate=false -f application.yaml -n argocd

    - name: ArgoCD Application Sync
      run: |
        argocd app sync argocd-web-app