name: CI/CD Pipeline

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: webapp
  ACR_NAME: youracrname
  ACR_LOGIN_SERVER: youracrname.azurecr.io
  SONAR_PROJECT_KEY: webapp
  SONAR_ORG: yourorg
  SONAR_HOST_URL: https://your-sonarqube-url
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1.0.0
        with:
          projectKey: ${{ env.SONAR_PROJECT_KEY }}
          organization: ${{ env.SONAR_ORG }}
          host: ${{ env.SONAR_HOST_URL }}
          token: ${{ env.SONAR_TOKEN }}

      - name: Set up Docker config for Kaniko
        run: |
          mkdir -p /kaniko/.docker
          echo "{\"auths\":{\"${{ env.ACR_LOGIN_SERVER }}\":{\"username\":\"${{ secrets.ACR_USERNAME }}\",\"password\":\"${{ secrets.ACR_PASSWORD }}\"}}}" > /kaniko/.docker/config.json

      - name: Build and Push with Kaniko
        uses: aevea/action-kaniko@v1.0.0
        with:
          dockerfile: ./Dockerfile
          context: .
          destination: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

      - name: Scan Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
          format: table
          exit-code: 0

      - name: Deploy with ArgoCD
        run: |
          argocd app sync webapp
          argocd app wait webapp
